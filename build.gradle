buildscript {
    //dependencies
    ext.coroutinesVersion = "1.3.9"
    ext.junit5Version = "5.6.2"
    ext.kotlin_version = "1.4.10"


    //versions & naming
    ext.csenseVersionName = "0.0.41"
    ext.csenseGroupId = "csense.kotlin"
    ext.csenseArtifactId = "csense-kotlin-tests"

    //repo settings
    ext.csenseUserOrg = "csense-oss"
    ext.csenseRepoName = "maven"

    ext.csenseGithub = "csense-oss/csense-kotlin-tests"
    ext.csenseLicense = "MIT"
    ext.csenseLicenseUrl = "https://mit-license.org/"

    ext.csenseDeveloperAlias = "tvede-dk"
    ext.csenseDeveloperName = "Kasper Tvede"
    ext.csenseDeveloperEmail = "csenseoss@tvedesys.dk"

    ext.readme = "readme.md"
    ext.csenseWebsite = "https://github.com/csense-oss/csense-kotlin-tests"
    ext.csenseGit = "https://github.com/csense-oss/csense-kotlin-tests.git"
    ext.csenseArtifactDescription = "A library for writing tests with a focus on simple features (assertions)"
    ext.csenseVersionDescription = ""

}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version "1.4.10"
    id 'org.jetbrains.dokka' version "0.10.0"
    id "maven-publish"
}

repositories {
    jcenter()
}

group project.csenseGroupId
version project.csenseVersionName

kotlin {
    explicitApi = 'strict'
    jvm()
    js(BOTH) { //https://kotlinlang.org/docs/reference/whatsnew14.html#new-js-ir-backend
        browser()
        nodejs()
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }

        jvmMain {
            dependencies {
                api "org.junit.jupiter:junit-jupiter-api:$junit5Version"
                api "org.junit.jupiter:junit-jupiter-engine:$junit5Version"
                api 'junit:junit:4.13'
                api "org.junit.vintage:junit-vintage-engine:$junit5Version"
                api "org.jetbrains.kotlin:kotlin-test-junit5:$kotlin_version"
                api "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
            }
        }

        jsMain {
            dependencies {
                api "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
            }
        }

    }
}

kotlin.sourceSets.all {
    languageSettings.progressiveMode = true
}


project.group = csenseGroupId
project.version = csenseVersionName


//required for the dokka.

task docJvm(type: org.jetbrains.dokka.gradle.DokkaTask) {

    outputFormat = 'javadoc'

    outputDirectory = "$buildDir/doc_jvm"

    impliedPlatforms = ["Common"] // This will force platform tags for all non-common sources e.g. "JVM"
}
apply from: "$rootDir/gradle/dokka.gradle"

apply from: "$rootDir/gradle/publish.gradle"
